/*!
 * Copyright 2022 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@mixin dropdown($borderColor, $background, $arrowColor) {
  display: flex;
  align-items: center;
  padding: 9px 12px 7px;
  width: 100%;
  height: 36px;
  border-width: 1px;
  border-style: solid;
  border-color: $borderColor;
  border-radius: 3px;
  background: $background;
  box-sizing: border-box;
  transition: border-color 200ms linear;
  cursor: pointer;

  @include arrow-color($arrowColor);
}

@mixin arrow-color($arrowColor) {
  .arrow {
    svg path {
      fill: $arrowColor;
    }
  }
}

@mixin hover-state($borderColor, $arrowColor) {
  &:hover:not(:active):not(:focus-visible):not(.opened):not(.error) {
    border-color: $borderColor;

    @include arrow-color($arrowColor);
  }
}

@mixin active-state($borderColor, $arrowColor) {
  &:active,
  &:focus-visible {
    padding: 8px 11px 6px;
    border-width: 2px;
    border-color: $borderColor;
    outline: none;

    @include arrow-color($arrowColor);
  }
}

@mixin opened-state($borderColor, $arrowColor) {
  &:not(:active):not(.error) {
    border-width: 1px;
    border-color: $borderColor;

    @include arrow-color($arrowColor);
  }

  .arrow {
    transform: rotate(180deg);
  }
}

@mixin error-state($borderColor) {
  border-width: 1px;
  border-color: $borderColor;
}

@mixin disabled-state {
  pointer-events: none;

  .arrow {
    svg path {
      opacity: 0.4;
    }
  }
}

@mixin value($color: $COLOR--almost-black) {
  flex-grow: 1;
  font-family: $FONT-ROBOTO-REGULAR;
  font-size: 13px;
  line-height: 20px;
  color: $color;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin placeholder($color) {
  color: $color;
}

@mixin select-list($backgroundColor) {
  position: absolute;
  top: 100%;
  margin-top: 5px;
  padding: 8px 0;
  display: none;
  width: max-content;
  max-width: 384px;
  min-width: 100%;
  min-height: 10px;
  background: $backgroundColor;
  box-shadow: $BOX_SHADOW--modal-window;
  border-radius: 3px;
  box-sizing: border-box;
  z-index: $Z-INDEX-POPUP;

  &.opened {
    display: block;
    &:focus-visible {
      outline: none;
    }
  }

  // TODO: Remove this section. This approach will be replaced with the integration of the UI-Kit dropdown component.
  /* stylelint-disable-next-line selector-max-attribute */
  [class*='modal-window'] & {
    max-width: 100%;
  }
}

.container {
  position: relative;
  display: inline-block;
  width: 100%;

  &.default-width {
    width: 240px;
  }
}

.icon {
  width: 16px;
  height: 16px;
  margin-right: 8px;
}

.arrow {
  display: inline-flex;
  width: 13px;
  height: 7px;
  margin-left: 12px;
  transition: transform 200ms linear;

  svg {
    height: 7px;
    width: 13px;
  }
}

.light {
  &.dropdown {
    @include dropdown($COLOR--e-200, $COLOR--bg-000, $COLOR--e-300);
    @include hover-state($COLOR--e-300, $COLOR--e-400);
    @include active-state($COLOR--topaz-focused, $COLOR--e-400);

    &.opened {
      @include opened-state($COLOR--topaz-pressed, $COLOR--topaz-pressed);
    }

    &.disabled {
      @include disabled-state;
      background-color: $COLOR--bg-100;

      .value {
        color: $COLOR--e-300;
      }
    }

    &.error.touched {
      @include error-state($COLOR--red-failed-2);
    }

    &.transparent-background {
      background-color: transparent;
    }
  }

  &.value {
    @include value;
  }

  &.select-list {
    @include select-list($COLOR--bg-000);
  }
}

.options-container {
  display: flex;
  flex-direction: column;
}

.dark {
  &.dropdown {
    @include dropdown(
      $COLOR--darkmode-gray-200,
      $COLOR--darkmode-bg-solid-96,
      $COLOR--darkmode-gray-150
    );
    @include hover-state($COLOR--darkmode-gray-150, $COLOR--darkmode-gray-150);
    @include active-state($COLOR--darkmode-topaz-focused, $COLOR--bg-000);

    &.opened {
      @include opened-state($COLOR--darkmode-topaz-main, $COLOR--e-200);
    }

    &.disabled {
      @include disabled-state;
      border-color: $COLOR--darkmode-gray-300;
      background-color: $COLOR--darkmode-gray-400;

      .value {
        color: $COLOR--darkmode-gray-200;
      }
    }

    &.error.touched {
      @include error-state($COLOR--darkmode-error-default);
    }
  }

  &.value {
    @include value($COLOR--bg-000);
  }

  &.placeholder {
    @include placeholder($COLOR--darkmode-gray-200);
  }

  &.select-list {
    @include select-list($COLOR--darkmode-gray-400);
  }
}

.ghost {
  &.dropdown {
    @include dropdown(transparent, transparent, $COLOR--e-300);
    @include hover-state(transparent, $COLOR--e-400);
    @include active-state($COLOR--topaz-focused, $COLOR--e-400);

    &.opened {
      @include opened-state(transparent, $COLOR--topaz-pressed);

      .value {
        color: $COLOR--topaz-pressed;
      }
    }

    &.disabled {
      @include disabled-state;
      background-color: $COLOR--bg-100;

      .value {
        color: $COLOR--e-300;
      }
    }

    &.error.touched {
      @include error-state($COLOR--red-failed-2);
    }
  }

  &.value {
    @include value;
  }

  &.select-list {
    @include select-list($COLOR--bg-000);
  }
}

.mobile-disabled {
  @media (max-width: $SCREEN_XS_MAX) {
    background-color: $COLOR--gray-91;
  }
}
